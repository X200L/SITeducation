{
    "problems": [
        {
            "id": 1,
            "title": "Сумма двух чисел",
            "difficulty": "easy",
            "acceptance": "52.3%",
            "description": "<p>Дан массив целых чисел <code>nums</code> и целое число <code>target</code>, верните <em>индексы двух чисел таких, что их сумма равна <code>target</code></em>.</p><p>Можно предположить, что каждый входной набор данных имеет <strong>ровно одно решение</strong>, и нельзя использовать один и тот же элемент дважды.</p><p>Ответ можно вернуть в любом порядке.</p><h3>Пример 1:</h3><pre>Вход: nums = [2,7,11,15], target = 9\nВыход: [0,1]\nПояснение: Потому что nums[0] + nums[1] == 9, возвращаем [0, 1].</pre><h3>Пример 2:</h3><pre>Вход: nums = [3,2,4], target = 6\nВыход: [1,2]</pre><h3>Пример 3:</h3><pre>Вход: nums = [3,3], target = 6\nВыход: [0,1]</pre><h3>Ограничения:</h3><ul><li><code>2 <= nums.length <= 10<sup>4</sup></code></li><li><code>-10<sup>9</sup> <= nums[i] <= 10<sup>9</sup></code></li><li><code>-10<sup>9</sup> <= target <= 10<sup>9</sup></code></li><li><strong>Существует только один правильный ответ.</strong></li></ul>",
            "defaultCode": {
                "javascript": "function twoSum(nums, target) {\n    // Ваш код здесь\n    \n};",
                "python": "def twoSum(nums, target):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [[2,7,11,15], 9],
                    "output": [0,1]
                },
                {
                    "input": [[3,2,4], 6],
                    "output": [1,2]
                },
                {
                    "input": [[3,3], 6],
                    "output": [0,1]
                }
            ]
        },
        {
            "id": 2,
            "title": "Сложение двух чисел",
            "difficulty": "medium",
            "acceptance": "37.1%",
            "description": "<p>Даны два <strong>непустых</strong> связных списка, представляющих два неотрицательных целых числа. Цифры хранятся в <strong>обратном порядке</strong>, и каждый узел содержит одну цифру. Сложите два числа и верните сумму в виде связного списка.</p><p>Можно предположить, что числа не содержат ведущих нулей, кроме самого числа 0.</p><h3>Пример 1:</h3><pre>Вход: l1 = [2,4,3], l2 = [5,6,4]\nВыход: [7,0,8]\nПояснение: 342 + 465 = 807.</pre>",
            "defaultCode": {
                "javascript": "function addTwoNumbers(l1, l2) {\n    // Ваш код здесь\n    \n};",
                "python": "def addTwoNumbers(l1, l2):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [[2,4,3], [5,6,4]],
                    "output": [7,0,8]
                }
            ]
        },
        {
            "id": 3,
            "title": "Самая длинная подстрока без повторяющихся символов",
            "difficulty": "medium",
            "acceptance": "33.5%",
            "description": "<p>Дана строка <code>s</code>, найдите длину <strong>самой длинной подстроки</strong> без повторяющихся символов.</p><h3>Пример 1:</h3><pre>Вход: s = \"abcabcbb\"\nВыход: 3\nПояснение: Ответ \"abc\" с длиной 3.</pre>",
            "defaultCode": {
                "javascript": "function lengthOfLongestSubstring(s) {\n    // Ваш код здесь\n    \n};",
                "python": "def lengthOfLongestSubstring(s):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": ["abcabcbb"],
                    "output": 3
                }
            ]
        },
        {
            "id": 4,
            "title": "Медиана двух отсортированных массивов",
            "difficulty": "hard",
            "acceptance": "32.5%",
            "description": "<p>Даны два отсортированных массива <code>nums1</code> и <code>nums2</code> размеров <code>m</code> и <code>n</code> соответственно, верните <strong>медиану</strong> двух отсортированных массивов.</p><p>Общая сложность времени выполнения должна быть <code>O(log (m+n))</code>.</p>",
            "defaultCode": {
                "javascript": "function findMedianSortedArrays(nums1, nums2) {\n    // Ваш код здесь\n    \n};",
                "python": "def findMedianSortedArrays(nums1, nums2):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [[1,3], [2]],
                    "output": 2.0
                }
            ]
        },
        {
            "id": 5,
            "title": "Сложение двух чисел",
            "difficulty": "easy",
            "acceptance": "85.2%",
            "description": "<p>Напишите функцию, которая принимает два числа и возвращает их сумму.</p><h3>Пример 1:</h3><pre>Вход: a = 5, b = 3\nВыход: 8</pre><h3>Пример 2:</h3><pre>Вход: a = -1, b = 1\nВыход: 0</pre>",
            "defaultCode": {
                "javascript": "function addNumbers(a, b) {\n    // Ваш код здесь\n    \n};",
                "python": "def addNumbers(a, b):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [5, 3],
                    "output": 8
                },
                {
                    "input": [-1, 1],
                    "output": 0
                }
            ]
        },
        {
            "id": 6,
            "title": "Умножение двух чисел",
            "difficulty": "easy",
            "acceptance": "90.1%",
            "description": "<p>Напишите функцию, которая принимает два числа и возвращает их произведение.</p><h3>Пример 1:</h3><pre>Вход: a = 4, b = 3\nВыход: 12</pre><h3>Пример 2:</h3><pre>Вход: a = -2, b = 3\nВыход: -6</pre>",
            "defaultCode": {
                "javascript": "function multiplyNumbers(a, b) {\n    // Ваш код здесь\n    \n};",
                "python": "def multiplyNumbers(a, b):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [4, 3],
                    "output": 12
                },
                {
                    "input": [-2, 3],
                    "output": -6
                }
            ]
        },
        {
            "id": 7,
            "title": "Деление двух чисел",
            "difficulty": "easy",
            "acceptance": "88.5%",
            "description": "<p>Напишите функцию, которая принимает два числа и возвращает результат деления первого на второе.</p><h3>Пример 1:</h3><pre>Вход: a = 10, b = 2\nВыход: 5</pre><h3>Пример 2:</h3><pre>Вход: a = 7, b = 2\nВыход: 3.5</pre>",
            "defaultCode": {
                "javascript": "function divideNumbers(a, b) {\n    // Ваш код здесь\n    \n};",
                "python": "def divideNumbers(a, b):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [10, 2],
                    "output": 5
                },
                {
                    "input": [7, 2],
                    "output": 3.5
                }
            ]
        },
        {
            "id": 8,
            "title": "Остаток от деления",
            "difficulty": "easy",
            "acceptance": "92.3%",
            "description": "<p>Напишите функцию, которая принимает два числа и возвращает остаток от деления первого на второе.</p><h3>Пример 1:</h3><pre>Вход: a = 10, b = 3\nВыход: 1</pre><h3>Пример 2:</h3><pre>Вход: a = 7, b = 2\nВыход: 1</pre>",
            "defaultCode": {
                "javascript": "function getRemainder(a, b) {\n    // Ваш код здесь\n    \n};",
                "python": "def getRemainder(a, b):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [10, 3],
                    "output": 1
                },
                {
                    "input": [7, 2],
                    "output": 1
                }
            ]
        },
        {
            "id": 9,
            "title": "Среднее арифметическое",
            "difficulty": "easy",
            "acceptance": "95.7%",
            "description": "<p>Напишите функцию, которая принимает два числа и возвращает их среднее арифметическое.</p><h3>Пример 1:</h3><pre>Вход: a = 4, b = 6\nВыход: 5</pre><h3>Пример 2:</h3><pre>Вход: a = 3, b = 7\nВыход: 5</pre>",
            "defaultCode": {
                "javascript": "function getAverage(a, b) {\n    // Ваш код здесь\n    \n};",
                "python": "def getAverage(a, b):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [4, 6],
                    "output": 5
                },
                {
                    "input": [3, 7],
                    "output": 5
                }
            ]
        },
        {
            "id": 10,
            "title": "Проверка палиндрома",
            "difficulty": "easy",
            "acceptance": "89.5%",
            "description": "<p>Напишите функцию, которая проверяет, является ли строка палиндромом. Палиндром - это строка, которая читается одинаково слева направо и справа налево, игнорируя регистр и небуквенные символы.</p><h3>Пример 1:</h3><pre>Вход: s = \"A man, a plan, a canal: Panama\"\nВыход: true\nПояснение: \"amanaplanacanalpanama\" - палиндром.</pre><h3>Пример 2:</h3><pre>Вход: s = \"race a car\"\nВыход: false\nПояснение: \"raceacar\" не является палиндромом.</pre>",
            "defaultCode": {
                "javascript": "function isPalindrome(s) {\n    // Ваш код здесь\n    \n};",
                "python": "def isPalindrome(s):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": ["A man, a plan, a canal: Panama"],
                    "output": true
                },
                {
                    "input": ["race a car"],
                    "output": false
                }
            ]
        },
        {
            "id": 11,
            "title": "Поиск в отсортированном массиве",
            "difficulty": "medium",
            "acceptance": "45.2%",
            "description": "<p>Дан отсортированный массив целых чисел <code>nums</code> и целевое значение <code>target</code>, верните индекс, если целевое значение найдено. Если нет, верните индекс, где оно должно быть вставлено.</p><h3>Пример 1:</h3><pre>Вход: nums = [1,3,5,6], target = 5\nВыход: 2</pre><h3>Пример 2:</h3><pre>Вход: nums = [1,3,5,6], target = 2\nВыход: 1</pre>",
            "defaultCode": {
                "javascript": "function searchInsert(nums, target) {\n    // Ваш код здесь\n    \n};",
                "python": "def searchInsert(nums, target):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [[1,3,5,6], 5],
                    "output": 2
                },
                {
                    "input": [[1,3,5,6], 2],
                    "output": 1
                }
            ]
        },
        {
            "id": 12,
            "title": "Проверка валидности скобок",
            "difficulty": "easy",
            "acceptance": "78.3%",
            "description": "<p>Дана строка <code>s</code>, содержащая только символы '(', ')', '{', '}', '[' и ']', определите, является ли строка валидной.</p><p>Строка является валидной, если:</p><ul><li>Открывающие скобки должны быть закрыты скобками того же типа.</li><li>Открывающие скобки должны быть закрыты в правильном порядке.</li></ul><h3>Пример 1:</h3><pre>Вход: s = \"()\"\nВыход: true</pre><h3>Пример 2:</h3><pre>Вход: s = \"([)]\"\nВыход: false</pre>",
            "defaultCode": {
                "javascript": "function isValid(s) {\n    // Ваш код здесь\n    \n};",
                "python": "def isValid(s):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": ["()"],
                    "output": true
                },
                {
                    "input": ["([)]"],
                    "output": false
                }
            ]
        },
        {
            "id": 13,
            "title": "Удаление дубликатов из отсортированного массива",
            "difficulty": "easy",
            "acceptance": "82.1%",
            "description": "<p>Дан отсортированный массив <code>nums</code>, удалите дубликаты на месте так, чтобы каждый элемент появлялся только один раз. Относительный порядок элементов должен остаться прежним.</p><h3>Пример 1:</h3><pre>Вход: nums = [1,1,2]\nВыход: 2, nums = [1,2,_]\nПояснение: Ваша функция должна вернуть k = 2, при этом первые два элемента nums равны 1 и 2 соответственно.</pre>",
            "defaultCode": {
                "javascript": "function removeDuplicates(nums) {\n    // Ваш код здесь\n    \n};",
                "python": "def removeDuplicates(nums):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [[1,1,2]],
                    "output": 2
                },
                {
                    "input": [[0,0,1,1,1,2,2,3,3,4]],
                    "output": 5
                }
            ]
        },
        {
            "id": 14,
            "title": "Поиск пикового элемента",
            "difficulty": "medium",
            "acceptance": "48.7%",
            "description": "<p>Пиковый элемент - это элемент, который строго больше своих соседей. Дан массив <code>nums</code>, найдите пиковый элемент и верните его индекс.</p><h3>Пример 1:</h3><pre>Вход: nums = [1,2,3,1]\nВыход: 2\nПояснение: 3 - это пиковый элемент, и его индекс равен 2.</pre>",
            "defaultCode": {
                "javascript": "function findPeakElement(nums) {\n    // Ваш код здесь\n    \n};",
                "python": "def findPeakElement(nums):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [[1,2,3,1]],
                    "output": 2
                },
                {
                    "input": [[1,2,1,3,5,6,4]],
                    "output": 5
                }
            ]
        },
        {
            "id": 15,
            "title": "Проверка совершенного числа",
            "difficulty": "easy",
            "acceptance": "91.2%",
            "description": "<p>Совершенное число - это положительное целое число, равное сумме всех его положительных делителей, кроме самого числа. Напишите функцию, которая проверяет, является ли число совершенным.</p><h3>Пример 1:</h3><pre>Вход: num = 28\nВыход: true\nПояснение: 28 = 1 + 2 + 4 + 7 + 14</pre><h3>Пример 2:</h3><pre>Вход: num = 7\nВыход: false</pre>",
            "defaultCode": {
                "javascript": "function checkPerfectNumber(num) {\n    // Ваш код здесь\n    \n};",
                "python": "def checkPerfectNumber(num):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [28],
                    "output": true
                },
                {
                    "input": [7],
                    "output": false
                }
            ]
        },
        {
            "id": 16,
            "title": "Поиск пропущенного числа",
            "difficulty": "easy",
            "acceptance": "85.6%",
            "description": "<p>Дан массив <code>nums</code>, содержащий n различных чисел в диапазоне [0, n], верните единственное число в диапазоне, которое отсутствует в массиве.</p><h3>Пример 1:</h3><pre>Вход: nums = [3,0,1]\nВыход: 2\nПояснение: n = 3, так как в массиве 3 числа, все числа находятся в диапазоне [0,3]. 2 - это пропущенное число.</pre>",
            "defaultCode": {
                "javascript": "function missingNumber(nums) {\n    // Ваш код здесь\n    \n};",
                "python": "def missingNumber(nums):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [[3,0,1]],
                    "output": 2
                },
                {
                    "input": [[0,1]],
                    "output": 2
                }
            ]
        },
        {
            "id": 17,
            "title": "Проверка степени двойки",
            "difficulty": "easy",
            "acceptance": "94.3%",
            "description": "<p>Напишите функцию, которая определяет, является ли данное целое число степенью двойки.</p><h3>Пример 1:</h3><pre>Вход: n = 1\nВыход: true\nПояснение: 2^0 = 1</pre><h3>Пример 2:</h3><pre>Вход: n = 16\nВыход: true\nПояснение: 2^4 = 16</pre>",
            "defaultCode": {
                "javascript": "function isPowerOfTwo(n) {\n    // Ваш код здесь\n    \n};",
                "python": "def isPowerOfTwo(n):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [1],
                    "output": true
                },
                {
                    "input": [16],
                    "output": true
                },
                {
                    "input": [3],
                    "output": false
                }
            ]
        },
        {
            "id": 18,
            "title": "Поиск наибольшего общего делителя",
            "difficulty": "easy",
            "acceptance": "88.9%",
            "description": "<p>Напишите функцию, которая находит наибольший общий делитель (НОД) двух положительных целых чисел.</p><h3>Пример 1:</h3><pre>Вход: a = 12, b = 18\nВыход: 6\nПояснение: 12 = 2 × 2 × 3, 18 = 2 × 3 × 3, НОД = 2 × 3 = 6</pre>",
            "defaultCode": {
                "javascript": "function gcd(a, b) {\n    // Ваш код здесь\n    \n};",
                "python": "def gcd(a, b):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [12, 18],
                    "output": 6
                },
                {
                    "input": [7, 13],
                    "output": 1
                }
            ]
        },
        {
            "id": 19,
            "title": "Проверка простого числа",
            "difficulty": "easy",
            "acceptance": "86.7%",
            "description": "<p>Напишите функцию, которая определяет, является ли данное число простым. Простое число - это натуральное число больше 1, которое делится без остатка только на 1 и на само себя.</p><h3>Пример 1:</h3><pre>Вход: n = 2\nВыход: true\nПояснение: 2 делится только на 1 и 2.</pre><h3>Пример 2:</h3><pre>Вход: n = 4\nВыход: false\nПояснение: 4 делится на 1, 2 и 4.</pre>",
            "defaultCode": {
                "javascript": "function isPrime(n) {\n    // Ваш код здесь\n    \n};",
                "python": "def isPrime(n):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [2],
                    "output": true
                },
                {
                    "input": [4],
                    "output": false
                },
                {
                    "input": [17],
                    "output": true
                }
            ]
        },
        {
            "id": 20,
            "title": "Поиск среднего арифметического",
            "difficulty": "easy",
            "acceptance": "92.1%",
            "description": "<p>Напишите функцию, которая находит среднее арифметическое элементов массива. Среднее арифметическое - это сумма всех элементов, деленная на их количество.</p><h3>Пример 1:</h3><pre>Вход: nums = [1, 2, 3, 4, 5]\nВыход: 3.0\nПояснение: (1 + 2 + 3 + 4 + 5) / 5 = 3.0</pre><h3>Пример 2:</h3><pre>Вход: nums = [10, 20, 30]\nВыход: 20.0\nПояснение: (10 + 20 + 30) / 3 = 20.0</pre>",
            "defaultCode": {
                "javascript": "function findMean(nums) {\n    // Ваш код здесь\n    \n};",
                "python": "def findMean(nums):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [[1, 2, 3, 4, 5]],
                    "output": 3.0
                },
                {
                    "input": [[10, 20, 30]],
                    "output": 20.0
                },
                {
                    "input": [[-5, 0, 5]],
                    "output": 0.0
                }
            ]
        },
        {
            "id": 21,
            "title": "Поиск повторов",
            "difficulty": "medium",
            "acceptance": "65.4%",
            "description": "<p>Дан несортированный массив чисел, найдите первое число которое повторяется в массиве. Если повторяющихся чисел нет, верните -1.</p>",
            "defaultCode": {
                "javascript": "function findFirstRepeating(nums) {\n    // Ваш код здесь\n    \n};",
                "python": "def findFirstRepeating(nums):\n    # Ваш код здесь\n    pass"
            },
            "testCases": [
                {
                    "input": [[1, 2, 3, 4, 3, 5]],
                    "output": 3
                },
                {
                    "input": [[1, 2, 3, 4, 1]],
                    "output": -1
                },
                {
                    "input": [[7, 3, 1, 4, 6, 2, 5, 3]],
                    "output": 3
                },
                {
                    "input": [[1, 1, 2, 2, 3, 3]],
                    "output": 1
                }
            ]
        }
    ]
} 